<Page
    x:Class="PacketMessagingTS.Views.CustomFoldersPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:models="using:PacketMessagingTS.Models"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:helpers="using:SharedCode"
    xmlns:system="using:System.Collections.ObjectModel"
    xmlns:shared="using:SharedCode"
    Style="{StaticResource PageStyle}"
    mc:Ignorable="d">

    <Page.Resources>
        <shared:DateTimeConverter x:Key="dateTimeConverter" />
    </Page.Resources>
    <RelativePanel Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}"
                   x:Name="ContentArea"
                   Margin="{StaticResource MediumLeftRightMargin}">
        <winui:TabView x:Name="customFolderTabView"
                       RelativePanel.AlignTopWithPanel="True"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.AlignRightWithPanel="True"
                       AllowDropTabs="False"
                       TabWidthMode="SizeToContent"
                       TabItemsSource="{x:Bind ViewModel.Tabs}"
                       SelectedIndex="{x:Bind ViewModel.SelectedTabIndex, Mode=TwoWay}"
                       SelectedItem="{x:Bind ViewModel.SelectedTab, Mode=TwoWay}"
                       AddTabButtonCommand="{x:Bind ViewModel.AddTabCommand}">
            <i:Interaction.Behaviors>
                <ic:EventTriggerBehavior EventName="TabCloseRequested">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.CloseTabCommand}" />
                </ic:EventTriggerBehavior>
            </i:Interaction.Behaviors>
            <winui:TabView.TabItemTemplate>
                <DataTemplate x:DataType="models:TabViewItemData">
                    <winui:TabViewItem
                    Header="{x:Bind Header}"
                    AutomationProperties.Name="{x:Bind Header}"
                    >
                        <!--Content="{x:Bind Content}"-->
                        <winui:TabViewItem.ContentTemplate>
                            <DataTemplate >
                                <Grid Padding="{StaticResource SmallLeftTopRightBottomMargin}">
                                    <!--<controls:DataGrid x:Name="dataGrid"
                                                       ItemsSource="{x:Bind Path=DataGridSource}"
                                                   HorizontalScrollBarVisibility="Auto"
                                                   VerticalScrollBarVisibility="Auto"
                                                   CanUserReorderColumns="True" CanUserResizeColumns="True"
                                                   SelectionMode="Extended"
                                                   AutoGenerateColumns="False"                                  
                                                   IsReadOnly="True"
                                                   CanUserSortColumns="True"
                                                   Sorting="DataGrid_Sorting"
                                                   SelectionChanged="DataGrid_SelectionChanged"
                                                   DoubleTapped="DataGrid_DoubleTapped"
                                                   RightTapped="DataGrid_RightTapped">
                                        <controls:DataGrid.Columns>
                                            <controls:DataGridTextColumn Header="Create Time" Binding="{Binding CreateTime, Converter={StaticResource dateTimeConverter}}" CanUserSort="True" MinWidth="100" Width="SizeToCells" Tag="CreateTime"/>
                                            <controls:DataGridTextColumn Header="Subject" Binding="{Binding Subject}" CanUserSort="True" Width="*" Tag="Subject"/>
                                            <controls:DataGridTextColumn Header="Msg. No." Binding="{Binding MessageNumber}" CanUserSort="True" Width="auto" Tag="MessageNumber"/>
                                            <controls:DataGridTextColumn Header="To" Binding="{Binding MessageTo}" CanUserSort="True" Width="84" Tag="MessageTo"/>
                                            <controls:DataGridTextColumn Header="From" Binding="{Binding MessageFrom}" CanUserSort="True" Width="84" Tag="MessageFrom"/>
                                        </controls:DataGrid.Columns>
                                        -->
                                    <!--<controls:DataGrid.ContextFlyout>
                                            <MenuFlyout>
                                                <MenuFlyoutItem Text="Open" Command="{x:Bind ViewModel.OpenMessageFromContextMenuCommand}"/>
                                                <MenuFlyoutItem Text="Delete" Command="{x:Bind ViewModel.DeleteMessagesFromContextMenuCommand}"/>
                                                <MenuFlyoutItem Text="Move To Archive" Command="{x:Bind ViewModel.MoveToArchiveFromContextMenuCommand}"/>
                                                <MenuFlyoutItem Text="open in WebView" Click="AppBarMainPage_OpenInWebView"/>
                                            </MenuFlyout>
                                        </controls:DataGrid.ContextFlyout>--><!--
                                    </controls:DataGrid>-->
                                </Grid>
                            </DataTemplate>
                        </winui:TabViewItem.ContentTemplate>
                    </winui:TabViewItem>
                </DataTemplate>
            </winui:TabView.TabItemTemplate>
        </winui:TabView>
        <controls:DataGrid x:Name="dataGrid"
                           RelativePanel.Below="customFolderTabView"
           	               RelativePanel.Above="ButtomCommandBar"
                           ItemsSource="{x:Bind Path=ViewModel.DataGridSource, Mode=OneWay}"
                           HorizontalScrollBarVisibility="Auto"
                           VerticalScrollBarVisibility="Auto"
                           CanUserReorderColumns="True" CanUserResizeColumns="True"
                           SelectionMode="Extended"
                           AutoGenerateColumns="False"                                  
                           IsReadOnly="True"
                           CanUserSortColumns="True"
                           IsRightTapEnabled="True"
                           SelectedItem="{x:Bind ViewModel.SelectedMessage, Mode=TwoWay}">
            <i:Interaction.Behaviors>
                <ic:EventTriggerBehavior EventName="DoubleTapped">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.DoubleTappedCommand}" />
                </ic:EventTriggerBehavior>
            <!--</i:Interaction.Behaviors>
            <i:Interaction.Behaviors>-->
                <ic:EventTriggerBehavior EventName="RightTapped">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.RightTappedCommand}" />
                </ic:EventTriggerBehavior>
                <ic:EventTriggerBehavior EventName="Sorting">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.SortingCommand}" />
                </ic:EventTriggerBehavior>
            </i:Interaction.Behaviors>

            <!--Sorting="DataGrid_Sorting"-->
            <!--RightTapped="DataGrid_RightTapped">-->
            <!--DoubleTapped="DataGrid_DoubleTapped"-->
            <!--SelectionChanged="DataGrid_SelectionChanged"-->
            <controls:DataGrid.Columns>
                <controls:DataGridTextColumn Header="Create Time" Binding="{Binding CreateTime, Converter={StaticResource dateTimeConverter}}" CanUserSort="True" MinWidth="100" Width="SizeToCells" Tag="CreateTime"/>
                <controls:DataGridTextColumn Header="Subject" Binding="{Binding Subject}" CanUserSort="True" Width="*" Tag="Subject"/>
                <controls:DataGridTextColumn Header="Msg. No." Binding="{Binding MessageNumber}" CanUserSort="True" Width="auto" Tag="MessageNumber"/>
                <controls:DataGridTextColumn Header="To" Binding="{Binding MessageTo}" CanUserSort="True" Width="84" Tag="MessageTo"/>
                <controls:DataGridTextColumn Header="From" Binding="{Binding MessageFrom}" CanUserSort="True" Width="84" Tag="MessageFrom"/>
            </controls:DataGrid.Columns>

            <!--<controls:DataGrid.ContextFlyout>
                <MenuFlyout>
                    <MenuFlyoutItem Text="Open" Command="{x:Bind ViewModel.OpenMessageFromContextMenuCommand}"/>
                    <MenuFlyoutSubItem x:Name="moveMenu" Text="Move" >
                    </MenuFlyoutSubItem>
                    <MenuFlyoutItem Text="Delete" Command="{x:Bind ViewModel.DeleteMessagesCommand}"/>
                </MenuFlyout>
            </controls:DataGrid.ContextFlyout>-->
        </controls:DataGrid>
        <CommandBar x:Name="ButtomCommandBar" Margin="-12,0,-12,0"
				    RelativePanel.AlignBottomWithPanel="True"
				    RelativePanel.AlignRightWithPanel="True"
				    RelativePanel.AlignLeftWithPanel="True" >
            <AppBarButton Label="Edit Folder Name" Icon="Edit" Command="{x:Bind ViewModel.EditFolderNameCommand}"/>
            <AppBarButton Label="Open" Icon="OpenFile" Command="{x:Bind ViewModel.OpenMessageCommand}"
                          />
            <AppBarButton Label="Send/Receive" Icon="Send" Command="{x:Bind ViewModel.SendReceiveCommand}" />
            <AppBarButton Label="Delete" Icon="Delete"
                          Command="{x:Bind ViewModel.DeleteMessagesCommand}" CommandParameter="{x:Bind ViewModel.SelectedMessages}"
                          HorizontalAlignment="Right" />
        </CommandBar>
    </RelativePanel>
</Page>
