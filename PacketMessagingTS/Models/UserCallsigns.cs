//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Xml.Serialization;
using MetroLog;
using SharedCode;
using Windows.Storage;

namespace PacketMessagingTS.Models
{
    // 
    // This source code was auto-generated by xsd, Version=4.6.1055.0.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class UserCallsigns
    {
        private static ILogger log = LogManagerFactory.DefaultLogManager.GetLogger<UserCallsigns>();
        private static LogHelper _logHelper = new LogHelper(log);

        private static volatile UserCallsigns _instance;
        private static object _syncRoot = new Object();

        private const string userCallsignsFileName = "UserCallsigns.xml";

        private UserCallSign[] userCallsignsArrayField;

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("UserCalls", IsNullable = false)]
        public UserCallSign[] UserCallsignsArray
        {
            get
            {
                return this.userCallsignsArrayField;
            }
            set
            {
                this.userCallsignsArrayField = value;
            }
        }

        private List<UserCallSign> userCallsignsList;
        [System.Xml.Serialization.XmlIgnore]
        public List<UserCallSign> UserCallsignsList
        {
            get => userCallsignsList;
            set => userCallsignsList = value;
        }

        private UserCallsigns()
        {
            userCallsignsArrayField = new UserCallSign[0];
        }

        public static UserCallsigns Instance
        {
            get
            {
                if (_instance is null)
                {
                    lock (_syncRoot)
                    {
                        if (_instance is null)
                            _instance = new UserCallsigns();
                    }
                }
                return _instance;
            }
        }

        public static async Task OpenAsync()
        {
            StorageFile userCallsignsFile = null;
            try
            {
                StorageFolder localFolder = ApplicationData.Current.LocalFolder;

                userCallsignsFile = await localFolder.GetFileAsync(userCallsignsFileName);

                using (FileStream reader = new FileStream(userCallsignsFile.Path, FileMode.Open))
                {
                    XmlSerializer serializer = new XmlSerializer(typeof(UserCallsigns));
                    _instance = (UserCallsigns)serializer.Deserialize(reader);

                    _instance.UserCallsignsList = _instance.UserCallsignsArray.ToList();
                }
            }
            catch (Exception ex)
            {
                _logHelper.Log(LogLevel.Error, $"Failed to open {userCallsignsFileName}. {ex.Message}");
            }
        }

        public async Task SaveAsync()
        {
            StorageFile storageFile = null;

            UserCallsignsArray = UserCallsignsList.ToArray();
            try
            {
                StorageFolder localFolder = ApplicationData.Current.LocalFolder;

                storageFile = await localFolder.CreateFileAsync(userCallsignsFileName, CreationCollisionOption.ReplaceExisting);
                if (storageFile != null)
                {
                    using (StreamWriter writer = new StreamWriter(new FileStream(storageFile.Path, FileMode.Create)))
                    {
                        XmlSerializer serializer = new XmlSerializer(typeof(UserCallsigns));
                        serializer.Serialize(writer, this);
                    }
                }
                else
                {
                    _logHelper.Log(LogLevel.Error, $"File not found {userCallsignsFileName}");
                }
            }
            catch (Exception e)
            {
                log.Error($"Error saving file {storageFile.Path}, {e}");
            }
        }

        public void AddItem(UserCallSign userCallsign)
        {
            UserCallsignsList.Add(userCallsign);
        }

        public void DeleteItem(UserCallSign userCallsign)
        {
            UserCallsignsList.Remove(userCallsign);
        }

    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class UserCallSign
    {

        private string userCallsignField;

        private string userNameField;

        private string userCityField;

        private string prefixField;

        private string primaryBBSField;

        private string secondaryBBSField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UserCallsign
        {
            get
            {
                return this.userCallsignField;
            }
            set
            {
                this.userCallsignField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UserName
        {
            get
            {
                return this.userNameField;
            }
            set
            {
                this.userNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UserCity
        {
            get
            {
                return this.userCityField;
            }
            set
            {
                this.userCityField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Prefix
        {
            get
            {
                return this.prefixField;
            }
            set
            {
                this.prefixField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PrimaryBBS
        {
            get
            {
                return this.primaryBBSField;
            }
            set
            {
                this.primaryBBSField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SecondaryBBS
        {
            get
            {
                return this.secondaryBBSField;
            }
            set
            {
                this.secondaryBBSField = value;
            }
        }
    }
}
