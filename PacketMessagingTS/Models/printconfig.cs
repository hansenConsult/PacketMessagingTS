//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.IO;
using System.Security.Cryptography.X509Certificates;
using System.Xml.Serialization;
using MetroLog;
using SharedCode;
using Windows.Storage;

namespace PacketMessagingTS.Models
{

    // 
    // This source code was auto-generated by xsd, Version=4.6.1055.0.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class PrintConfig
    {
        private static ILogger log = LogManagerFactory.DefaultLogManager.GetLogger<PrintConfig>();
        private static LogHelper _logHelper = new LogHelper(log);

        private const string _printConfigFileName = "PrintConfig.xml";

        private ReceivedSentSettings[] receivedSentSettingsField;

        private string printerNameField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReceivedSentSettings")]
        public ReceivedSentSettings[] ReceivedSentSettings
        {
            get
            {
                return this.receivedSentSettingsField;
            }
            set
            {
                this.receivedSentSettingsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PrinterName
        {
            get
            {
                return this.printerNameField;
            }
            set
            {
                this.printerNameField = value;
            }
        }

        public async void Open()
        {
            StorageFolder localFolder = ApplicationData.Current.LocalFolder;

            StorageFile file = null;
            try
            {
                var storageItem = await localFolder.TryGetItemAsync(_printConfigFileName);
                if (storageItem is null)
                {
                    // Copy the file from the install folder to the local folder
                    StorageFolder folder = await Windows.ApplicationModel.Package.Current.InstalledLocation.GetFolderAsync("Assets");
                    StorageFile storageFile = await folder.GetFileAsync(_printConfigFileName);
                    if (storageFile != null)
                    {
                        await storageFile.CopyAsync(localFolder, _printConfigFileName, Windows.Storage.NameCollisionOption.FailIfExists);
                    }
                }

                file = await localFolder.GetFileAsync(_printConfigFileName);
                using (FileStream reader = new FileStream(file.Path, FileMode.Open))
                {
                    XmlSerializer serializer = new XmlSerializer(typeof(PrintConfig));
                    PrintConfig printConfig = (PrintConfig)serializer.Deserialize(reader);
                }

            }
            catch (FileNotFoundException e)
            {
                _logHelper.Log(LogLevel.Error, $"Open PrintConfig file failed: {e.Message}");
                return;
            }

            catch (Exception e)
            {
                _logHelper.Log(LogLevel.Error, $"Error opening file {file?.Path + _printConfigFileName}, {e}");
                return;
            }
        }

        public async void Save()
        {
            StorageFolder localFolder = ApplicationData.Current.LocalFolder;
            try
            {
                StorageFile file = await localFolder.CreateFileAsync(_printConfigFileName, CreationCollisionOption.ReplaceExisting);
                using (StreamWriter writer = new StreamWriter(new FileStream(file.Path, FileMode.Create)))
                {
                    XmlSerializer serializer = new XmlSerializer(typeof(PrintConfig));
                    serializer.Serialize(writer, this);
                }
            }
            catch (Exception e)
            {
                _logHelper.Log(LogLevel.Error, $"Error saving {_printConfigFileName}, {e.Message}");
                return;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class ReceivedSentSettings
    {

        private string[] copyDestinationsField;

        private bool receivedPrintField;

        private bool printField;

        private byte copyCountField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CopyDestinations")]
        public string[] CopyDestinations
        {
            get
            {
                return this.copyDestinationsField;
            }
            set
            {
                this.copyDestinationsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ReceivedPrint
        {
            get
            {
                return this.receivedPrintField;
            }
            set
            {
                this.receivedPrintField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Print
        {
            get
            {
                return this.printField;
            }
            set
            {
                this.printField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public byte copyCount
        {
            get
            {
                return this.copyCountField;
            }
            set
            {
                this.copyCountField = value;
            }
        }
    }
}
